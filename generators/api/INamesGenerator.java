/**
 * Небольшое повторение:
 * 1) В интерфейсе указывается то, что обязан меть делать наш объект, Student например.
 *    На видео с ютуба от Ильи был пример с Мэном.
 *    Он был обязан уметь: отдавать количество зубов (в смысле пользователю т.е. через getter),
 *    получать количество зубов (через setter), длину волос и т.д.
 *    Здесь то же самое с именем: Студент обязан уметь говорить как его зовут.
 *    А каким образом, через файл, или через массив имён - это мы уже определяем в реализации
 *    метода getName в мейне.
 * 2) Контракт метода - это тип, имя и параметры.
 * 3) Сигнатура метода - это имя и параметры, без типа.
 * 4) Методы, у которых одинаковые контракты называются переопределёнными. Как было с LiarMan,
 *    где мальчик врал, что у него 48 зубов. (return другой был)
 *    Было: @Override
 *          public int getTeethCount(){
 *              return 48;
 * 5) Методы, у которых одинаковые тип и название, но разные параметры (то, что в скобках)
 *    называются перегруженными.
 *    Было: public static void print(Man_number2 man){} и public static void print(IHuman_number4 man){}
 */

package hw5_StudentCollection.generators.api;

public interface INamesGenerator {

  //String getName(int from, int to);
    String getName();//Можно написать просто вот так.
  //String getName(String filePath);

}
